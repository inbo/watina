% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sf.R
\name{as_points}
\alias{as_points}
\title{Convert a dataframe with X and Y coordinates to a geospatial points object}
\usage{
as_points(df, xvar = "x", yvar = "y", remove = FALSE)
}
\arguments{
\item{df}{A dataframe with X and Y coordinates in meters, assumed to be in
the Belgian Lambert 72 CRS (EPSG-code 31370).}

\item{xvar}{String. The X coordinate variable name. Defaults to \code{"x"}.}

\item{yvar}{String. The Y coordinate variable name. Defaults to \code{"y"}.}

\item{remove}{Logical. Should the X and Y coordinates be removed from the
dataframe after conversion to a spatial object?}
}
\value{
An \code{sf} object of geometry type \code{POINT} with EPSG-code
31370 as coordinate reference system.
}
\description{
\code{as.points} is a convenience function which accepts as input a dataframe
with X/Y coordinates (in meters), assumed to come from the coordinate
reference system (CRS)
'Belge 1972 / Belgian Lambert 72' (EPSG \href{https://epsg.io/31370}{31370}).
It converts the dataframe into an \code{sf} points object in the same CRS.
}
\details{
As locations in Watina are typically defined by their X/Y coordinates,
this function eases the conversion to spatial data.
To later remove all spatial information from the result, you can use
\code{\link[sf:st_geometry]{sf::st_drop_geometry()}}.
}
\examples{
library(tibble)
mydata <-
  tibble(
    a = runif(5),
    x = rnorm(5, 155763, 5),
    y = rnorm(5, 132693, 5)
  )
as_points(mydata)

}
