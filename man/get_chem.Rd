% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get.R
\name{get_chem}
\alias{get_chem}
\title{Get hydrochemical data from the database}
\usage{
get_chem(
  locs,
  con,
  startdate,
  enddate = paste(day(today()), month(today()), year(today())),
  conc_type = c("mass", "eq"),
  en_range = c(-0.1, 0.1),
  en_exclude_na = FALSE,
  en_fecond_threshold = 0.0023,
  collect = FALSE
)
}
\arguments{
\item{locs}{A \code{tbl_lazy} object or a dataframe, with at least a column
\code{loc_code} that defines the locations for which values are to be
returned.
Typically, this will be the object returned by \code{\link{get_locs}}.}

\item{con}{A \code{DBIConnection} object to Watina.
See \code{\link{connect_watina}} to generate one.}

\item{startdate}{First date of the timeframe, as a string.
The string must use a formatting of the order 'day month year',
i.e. a format which can be interpreted by \code{\link[lubridate:ymd]{dmy}}.

Examples:
\code{"16-1-2005"},
\code{"16-01-2005"},
\code{"1-01-2005"},
\code{"16/1/2005"},
\code{"16/1/05"},
\code{"16/1/88"} (years 69 and higher are regarded as 19xy),
\code{"16/1-2005"},
\code{"23 Oct 99"},
\code{"23 Okt 99"} (supposing this notation follows your system locale),
\code{"16 1-!!-2005"},
......}

\item{enddate}{Last date of the timeframe, as a string.
The same formatting rule must be applied as in \code{startdate}.
Defaults to a string representation of the current system date.}

\item{conc_type}{A string defining the type of concentration in
\emph{ionic concentration variables}.
Either:
\itemize{
\item{\code{"mass"}:} mass concentration (the default);
\item{\code{"eq"}:} equivalent concentration (= normality), referring to the
electrical charge of the dissolved ion's main natural form.
}
Note that the argument has no effect on the value of non-ion-variables.}

\item{en_range}{Numeric vector of length 2.
Specifies the allowed range of
water sample electroneutrality for ion-variable measurements (see Details).
Both vector elements must be within the range \code{c(-1, 1)}, with the
second element not being smaller than the first.
Note that this argument only affects the selection of water samples for
ionic concentration variables, not for non-ion variables such as pH and
electrical conductivity.
Measurements of non-ion variables are always returned.}

\item{en_exclude_na}{Logical.
Should ion-variable measurements of water samples with missing
electroneutrality value be omitted?
Defaults to FALSE.
A missing electroneutrality value is the consequence of one or more missing
values of ionic concentration variables that are needed for
electroneutrality calculation of the water sample.
Note that this argument has no effect on the selection of non-ion variable
measurements, which are always returned.}

\item{en_fecond_threshold}{A number (with a sensible default).
May be set to \code{NA} or \code{NULL} by the user.
\itemize{
\item If \code{en_fecond_threshold} is a number (numeric scalar), all
measurements from water samples with an iron (meq/l) /
conductivity (µS/cm) ratio
(\code{Fe/CondL}) equal to or larger than \code{en_fecond_threshold} are
returned, regardless of the \code{en_range} and \code{en_exclude_na}
arguments.
\item If \code{en_fecond_threshold} is set to \code{NA} or \code{NULL},
the iron / conductivity ratio is ignored.
Hence, no exceptions are made to
the conditions imposed by \code{en_range} and \code{en_exclude_na}
(except for measurements of non-ion variables, which are always returned).
}}

\item{collect}{Should the data be retrieved as a local tibble?
If \code{FALSE} (the default), a \code{tbl_lazy} object is returned
(lazy query).
Hence the result can be further built upon before retrieving data with
\code{\link[dplyr:compute]{collect()}}.}
}
\value{
By default, a \code{tbl_lazy} object.
With \code{collect = TRUE},
a local \code{\link[tibble]{tibble}} is returned.

(TO BE ADDED: Explanation on the variable names of the returned object)

(TO BE ADDED: Explanation on the different abbreviations in the column
'chem_variable')
}
\description{
Returns hydrochemical data from the \emph{Watina} database,
either as a lazy object or as a
local tibble.
The values must belong to selected locations
and
to a specified timeframe.
}
\details{
The timeframe is a selection interval between
a given \code{startdate} and \code{enddate}.

The water samples must meet a specified electroneutrality
condition, set by \code{en_range}.
\itemize{
\item This condition is however ignored when the sample's iron (meq/l) /
conductivity (µS/cm) ratio exceeds \code{en_fecond_threshold} (use
\code{en_fecond_threshold = NA} if you don't want this to happen).
\item Further, water samples are included by default if their
electroneutrality is \code{NA} (this is controlled by the
\code{en_exclude_na} argument).
\item Finally, please note that measurements of non-ion variables are
\emph{always} returned!
}
To retrieve all data from all water samples, use \code{en_range = c(-1, 1)}.

TO BE ADDED: What is electroneutrality and why is it used as a criterion?
}
\examples{
\dontrun{
watina <- connect_watina()
library(dplyr)
mylocs <- get_locs(watina, area_codes = "ZWA")
mylocs \%>\% get_chem(watina, "1/1/2017")
mylocs \%>\% get_chem(watina, "1/1/2017", collect = TRUE)
mylocs \%>\% get_chem(watina, "1/1/2017", conc_type = "eq")

# compare the number of returned rows:
mylocs \%>\% get_chem(watina, "1/1/2017") \%>\% count
mylocs \%>\% get_chem(watina, "1/1/2017",
                    en_fecond_threshold = NA) \%>\% count
mylocs \%>\% get_chem(watina, "1/1/2017",
                    en_exclude_na = TRUE) \%>\% count
mylocs \%>\% get_chem(watina, "1/1/2017",
                    en_exclude_na = TRUE,
                    en_fecond_threshold = NA) \%>\% count
mylocs \%>\% get_chem(watina, "1/1/2017",
                    en_range = c(-1, 1)) \%>\% count

# joining results to mylocs:
mylocs \%>\%
get_chem(watina, "1/1/2017") \%>\%
    left_join(mylocs \%>\%
                  select(-loc_wid),
              .) \%>\%
    collect

# Disconnect:
DBI::dbDisconnect(watina)
}

}
\seealso{
Other functions to query the database: 
\code{\link{get_locs}()},
\code{\link{get_xg3}()}
}
\concept{functions to query the database}
